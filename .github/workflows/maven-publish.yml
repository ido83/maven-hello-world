name: Maven Package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "zulu"
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      # There dilema present is whether to use xpath for querying the version and xmlstarlet for updating the value
      # Or to use `mvn evaluate` for querying and `mvn version:set` for updating the value.
      # For the first one, i would only need to build a single layer with these apt packages present, and use github actions in a container.
      # For the mvn one, i would need to cache the .m2 packages requied for the seamless use of its methods.
      # At present time, both are present, and both are unoptimized.
      - name: Install Package
        uses: ConorMacBride/install-package@v1.1.0
        with:
          apt: libxml-xpath-perl

      - shell: bash
        name: increment pom version
        working-directory: ${{ github.workspace }}/myapp
        run: |
          version=$(xpath -q -e "/project/version/text()" pom.xml)
          # ====== 
          # alternative mvn version of retrieving the pom version
          # version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          # ======

          if ! [[ $version =~ ^[0-9]*\.[0-9]*\.[0-9]*$ ]]; then
            echo version is of unexpected semver format of x.y.z. Exiting..
            exit 1
          fi
          z_value=$(echo $version | cut -d\. -f3)
          new_z_value=$((z_value+1))
          new_version="$(echo $version | rev | cut -d. -f2- | rev).$new_z_value"
          echo $new_version
          mvn versions:set -DnewVersion=$new_version
          echo "new_version=$new_version" >> "${GITHUB_ENV}"

      - name: Build with Maven
        working-directory: ${{ github.workspace }}/myapp
        run: mvn -B package --file pom.xml

      #     - name: Publish to GitHub Packages Apache Maven
      #       run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      #       env:
      #         GITHUB_TOKEN: ${{ github.token }}

      # - name: Docker Login
      #   uses: docker/login-action@v2.1.0
      #   with:
      #     username: myusername
      #     password: mypassword

      - name: Build and push Docker images
        uses: docker/build-push-action@v4.0.0
        with:
          build-args: JAR_VERSION=${{ env.new_version }}
          # outputs: # optional
          platforms: linux/amd64
          push: true
          # List of tags
          tags: maven:${{ env.new_version }}
          # GitHub Token used to authenticate against a repository for Git context
          # github-token: # optional, default is ${{ github.token }}
